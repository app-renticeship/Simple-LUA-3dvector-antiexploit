-- serverside -dante 2018
local checking = {}

--local location = {}
--local checkloop = true
--local loopcount = 0

local ratetable = {}
local ServerStorage = game:GetService("ServerStorage")

game.Players.PlayerRemoving:Connect(function(player)
	checking[player]=nil
end)
local function HRP(playerobj)
	if pcall(function()game.Workspace:FindFirstChild(playerobj.Name) end) then
			if checking[playerobj] and game.Workspace[playerobj.Name].Humanoid.Health>0 and game.Workspace[playerobj.Name]:FindFirstChild("HumanoidRootPart")==nil then
				print(playerobj.Name.."HRP missing")
				playerobj:Kick("HRP missing")
				return false
			end
		return true
	else 
		print(playerobj.Name.." Left game")
		return true
	end
end
local function fly(playerobj)
	local flycheck = 10
	local oldylevel = playerobj.HumanoidRootPart.Position.y
	while flycheck do
		
		
	end
	
end
local function Loc(player,playerobj)
	local freq = 0
	local sum = 0
	print("loc")
	wait(2)
	--local bounce = true
	local oldvalue = playerobj.HumanoidRootPart.CFrame.p
	print(tostring("OLD\nx: "..tostring(oldvalue.x).."\nz:"..tostring(oldvalue.z)))
	local oldmag = (Vector3.new(oldvalue.x,0,oldvalue.z)-Vector3.new(playerobj.HumanoidRootPart.CFrame.p.x,0,playerobj.HumanoidRootPart.CFrame.p.z)).magnitude
--[[local function LocRate(playerobj,oldmag,reset)
	--ratetable[playerobj]
	if reset then
		ratetable.playerobj=nil
		freq=0
		sum=0
		pcall(function()location[playerobj]=nil end)
	else
		if ratetable.playerobj ==nil then
		 ratetable= {
			playerobj={}
			}
		end
		if freq==1 then
			location[playerobj]=playerobj.HumanoidRootPart.Position
		end
		--local playertb = ratetable[playerobj]
		table.insert(ratetable.playerobj,oldmag)
		for k,v in pairs(ratetable.playerobj)do
			sum=sum+v
			freq = freq+1
			--print("freq: "..freq.."\nValue: "..values)
		end
		if freq >4 then
			--print("VALUE: "..sum.."\nFREQ:"..freq)
			local rate = (sum / freq)
				--print("reset freq values")
				ratetable.playerobj=nil
			print("RATE: "..string.format("%f",rate))
			if rate >0.63 then
			print("LOCRATE IRREGULAR")
				return true
			end
			freq = 0
			sum = 0
			location[playerobj]=nil
		else
			return false
		end	
	end
end
--]]
	while wait() do
			
		--if HRP(player) then
			--local oldy = playerobj.Head.Position.y
			--local newvalue pcall(function()return playerobj.HumanoidRootPart.Position  end)
			--print("startloop\nnew "..tostring(newvalue).."\nold "..tostring(oldvalue))
			local exist,newmag = pcall(function()return(Vector2.new(oldvalue.x,oldvalue.z)-Vector2.new(playerobj.HumanoidRootPart.CFrame.p.x,playerobj.HumanoidRootPart.CFrame.p.z)).magnitude end)
			if not exist then
				HRP(player)
				break;
			end
			print(string.format("%f",newmag).." "..playerobj.Name)
		--	if newmag>10 then
			--	playerobj.HumanoidRootPart.CFrame = oldvalue
			--end
				--if newmag >10 then
				--	playerobj.Humanoid.Health = 0
				--end
				--if newmag~= oldmag then
					if newmag>1 then
						warn(playerobj.Name.." [S] Irregular movement")
						playerobj.HumanoidRootPart.CFrame = oldvalue
					--	playerobj.HumanoidRootPart.CFrame = oldvalue
					end
				--end	
			oldmag = newmag
			oldvalue=playerobj.HumanoidRootPart.CFrame
		--else
		--	break;
		--end
	end
end


--[[
while checkloop do
	loopcount=loopcount+1
	for k,v in pairs(checktbl) do
		if checking[v]==false then
			spawn(function()check(v)end)
		else 
			-- check in progress
		end
	end
	checkloop = false
wait(checkwait(loopcount))
end
game.OnClose= function()
	checkloop = false
end
--]]
game.Players.PlayerAdded:Connect(function(player)
	player.CharacterAdded:Connect(function(char)
		checking[char]=true
		--Loc(player,char)
		while wait() do
			--if game.Players[player.Name].PlayerScripts.StarterGui.LocalScript
			--print(char.HumanoidRootPart.Velocity.y)
		end
		--Loc(player,char)
		--print(tostring("OLD\nx: "..tostring(char.HumanoidRootPart.Position.x).."\nz:"..tostring(char.HumanoidRootPart.Position.z)))	
	end)
	player.CharacterRemoving:Connect(function(char)
	--table.remove(checktbl,char)
	checking[char]=nil
	end)
end)
